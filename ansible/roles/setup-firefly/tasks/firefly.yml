---

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install essential dependencies
  apt:
    pkg:
    - curl
    - software-properties-common
    - php7.4
    - php7.4-cli
    - php7.4-zip
    - php7.4-gd
    - php7.4-fpm
    - php7.4-json
    - php7.4-common
    - php7.4-mysql
    - php7.4-zip
    - php7.4-mbstring
    - php7.4-curl
    - php7.4-xml
    - php7.4-bcmath
    - php7.4-imap
    - php7.4-ldap
    - php7.4-intl
    - mariadb-server
    - mariadb-client
    - nginx
    - python3-pip
    state: present

- name: Configure PHP per-process memory limit to 512M
  lineinfile:
    dest: "/etc/php/7.4/fpm/php.ini"
    regexp: "^memory_limit = .*$"
    line: "memory_limit = 512M"
  notify:
    - restart php-fpm
    - stop apache2

- name: Trash default nginx config
  shell: "mv {{ nginx_config_path }}/default /tmp/"
  ignore_errors: true

- name: Generate firefly nginx config
  template:
    src: firefly.conf.j2
    dest: "{{ nginx_config_path }}/firefly.conf"
  notify:
    - restart nginx
    - restart php-fpm

- name: Install composer
  block:
    - name: Obtain setup script
      shell: "curl -sS https://getcomposer.org/installer -o composer-setup.php"
      args:
        chdir: /tmp

    - name: Run composer setup
      shell: "php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
      args:
        chdir: /tmp

- name: Install firefly-iii composer image
  vars: 
    FireflyHost: "{{ lookup('community.general.passwordstore', 'firefly' + '/DB_HOST', errors='ignore') }}"
    FireflyDatabase: "firefly"
    FireflyUsername: "{{ lookup('community.general.passwordstore', 'firefly' + '/DB_USERNAME', errors='ignore') }}"
    FireflyPassword: "{{ lookup('community.general.passwordstore', 'firefly' + '/DB_PASSWORD', errors='ignore') }}"
    FireflyUsernameDefault: "{{ lookup('community.general.passwordstore', 'firefly' + '/DB_USERNAME_DEFAULT', errors='ignore') }}"
    FireflyPasswordDefault: "{{ lookup('community.general.passwordstore', 'firefly' + '/DB_PASSWORD_DEFAULT', errors='ignore') }}"

  block:
    - name: Create composer project
      shell: "yes | composer create-project grumpydictator/firefly-iii --no-dev --prefer-dist firefly-iii 5.5.13"
      args:
        chdir: "{{ firefly_install_path }}"
      ignore_errors: true

    - name: Set environment variables
      lineinfile:
        dest: "{{ firefly_install_path }}/firefly-iii/.env"
        regexp: "{{ item.regex }}"
        line: "{{ item.actual }}"
      with_items:
        - regex: "^DB_HOST=.*$"
          actual: "DB_HOST={{ FireflyHost }}"
        - regex: "^DB_DATABASE=.*$"
          actual: "DB_DATABASE={{ FireflyDatabase }}"
        - regex: "^DB_USERNAME=.*$"
          actual: "DB_USERNAME={{ FireflyUsername }}"
        - regex: "^DB_PASSWORD=.*$"
          actual: "DB_PASSWORD={{ FireflyPassword }}"

    - name: Make sure pymysql is present
      become: true # needed if the other tasks are not played as root
      pip:
        name: pymysql
        state: present

    - name: Create new database for firefly
      community.mysql.mysql_db:
        check_implicit_admin: yes
        login_user: "{{ FireflyUsernameDefault }}"
        login_password: "{{ FireflyPasswordDefault }}"
        name:
          - "{{ FireflyDatabase }}"
        state: present

    - name: Configure MySQL for the new user
      community.mysql.mysql_user:
        check_implicit_admin: yes
        login_user: "{{ FireflyUsernameDefault }}"
        login_password: "{{ FireflyPasswordDefault }}"
        state: present
        name: "{{ FireflyUsername }}"
        password: "{{ FireflyPassword }}"
        priv:
          "firefly.*": "ALL,GRANT"

    - name: Housekeeping & migrations
      shell: "{{ item }}"
      with_items:
        - "php artisan migrate:refresh --seed"
        - "php artisan firefly-iii:upgrade-database"
        - "php artisan passport:install"
      args:
        chdir: "{{ firefly_install_path }}/firefly-iii"
      notify:
        - restart nginx
        - restart php-fpm
